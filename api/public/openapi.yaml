# This file is auto-generated by rspec-openapi https://github.com/k0kubun/rspec-openapi
#
# When you write a spec in spec/requests, running the spec with `OPENAPI=1 rspec` will
# update this file automatically. You can also manually edit this file.
---
openapi: 3.0.3
info:
  title: API Challenge FUDO
  version: 1.0.0
servers:
- url: http://localhost:9292
paths:
  "/auth/login":
    post:
      summary: POST /auth/login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
              - username
              - password
            example:
              username: user
              password: password
      responses:
        '200':
          description: Logs in a user, setting the session cookie when a correct combination
            of username and password is provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                - message
              example:
                message: Logged in successfully
        '401':
          description: Returns a 401 error if the provided credentials are wrong.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: Invalid username or password
        '422':
          description: Returns a 422 error if credentials are missing or the user
            is already logged in
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: you are already logged in
      tags:
      - Auth
  "/products":
    get:
      summary: GET /products
      responses:
        '200':
          description: Returns a list of products that match the provided pagination
            and filters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  products:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        external_id:
                          type: string
                      required:
                      - id
                      - name
                      - external_id
                  count:
                    type: integer
                  page_count:
                    type: integer
                required:
                - products
                - count
                - page_count
              example:
                products:
                - id: 0
                  name: Product
                  external_id: '1234'
                count: 1
                page_count: 1
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: Unauthorized
          description: Returns a 401 error if unauthorized.
      tags:
      - Products
      security:
      - cookieAuth: []
      parameters:
      - name: external_id
        in: query
        required: false
        schema:
          type: integer
        example: 1234
      - name: id
        in: query
        required: false
        schema:
          type: integer
        example: 0
      - name: name
        in: query
        required: false
        schema:
          type: string
        example: Product
      - name: page
        in: query
        required: false
        schema:
          type: integer
        example: 0
      - name: per_page
        in: query
        required: false
        schema:
          type: integer
        example: 10
    post:
      summary: POST /products
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                external_id:
                  type: string
                webhook_url:
                  type: string
              required:
              - name
              - external_id
            example:
              name: Product
              external_id: '1234'
              webhook_url: http://localhost:9292/webhook
      responses:
        '202':
          description: Starts the aynchronous creation of a new product and returns
            the log_id of the creation process. If provided with a webhook_url, it
            will notify the result of the operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  log_id:
                    type: integer
                required:
                - log_id
              example:
                log_id: 0
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: Unauthorized
          description: Returns a 401 error if unauthorized.
        '422':
          description: Does not enqueue the creation of a new product if either name
            or external_id is missing.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: name and external_id are required
      tags:
      - Products
      security:
      - cookieAuth: []
  "/products/creation_logs":
    get:
      summary: GET /products/creation_logs
      responses:
        '200':
          description: Returns a list of product creation logs that match the provided
            pagination and filters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  creation_logs:
                    type: array
                    items:
                      type: object
                      properties:
                        log_id:
                          type: integer
                        name:
                          type: string
                        external_id:
                          type: string
                        status:
                          type: string
                        errors:
                          type: array
                          items: {}
                      required:
                      - log_id
                      - name
                      - external_id
                      - status
                      - errors
                  count:
                    type: integer
                  page_count:
                    type: integer
                required:
                - creation_logs
                - count
                - page_count
              example:
                creation_logs:
                - log_id: 0
                  name: Product
                  external_id: '1234'
                  status: created
                  errors: []
                count: 1
                page_count: 1
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: Unauthorized
          description: Returns a 401 error if unauthorized.
      tags:
      - Products
      security:
      - cookieAuth: []
      parameters:
      - name: log_id
        in: query
        required: false
        schema:
          type: integer
        example: 0
      - name: page
        in: query
        required: false
        schema:
          type: integer
        example: 0
      - name: per_page
        in: query
        required: false
        schema:
          type: integer
        example: 10
components:
  securitySchemes:
    cookieAuth:
      name: rack.session
      in: cookie
      type: apiKey
